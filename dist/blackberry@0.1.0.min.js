var __defProp=Object.defineProperty;var __name=(target,value)=>__defProp(target,"name",{value,configurable:!0});console.log(`______ _       ___  _____  _   ________ ___________________   __  ___ _____
| ___  |     / _ /  __ | | / /| ___   ___| ___  ___   / / |_  /  ___|
| |_/ / |    / /_  /  /| |/ / | |_/ / |__ | |_/ / |_/ / V /    |  \`--.
| ___  |    |  _  | |    |     | ___   __||    /|    /   /     | |\`--. | |_/ / |____| | | | __/| |  | |_/ / |___| | | |   | |_/__/ /__/ /
____/_____/_| |_/____/_| _/____/____/_| __| _| _(_)____/____/ `);function init(){return function(alpine){document.querySelectorAll("template").forEach(element=>{parseTemplate(element,alpine)}),new MutationObserver(mutations=>{mutations.forEach(mutation=>{mutation.addedNodes.forEach(node=>{node.tagName==="TEMPLATE"&&parseTemplate(node,alpine)})})}).observe(document.body,{childList:!0,subtree:!0})}}__name(init,"init");function parseTemplate(element,alpine){if(typeof element.getAttribute("blackberry")!="string"||element.tagName!=="TEMPLATE")return;let tagName=element.getAttribute("tag");if(customElements.get(tagName))return;let script=element.content.querySelector("script[setup]")?.innerHTML??"",style=element.content.querySelector("style[scoped]")?.innerHTML??"",markup=element.content.querySelector("markup")??"",props=element.getAttribute("props")?.split(",").map(prop=>prop.trim())??[];define(alpine,tagName,{script,style,markup,props})}__name(parseTemplate,"parseTemplate");function define(alpine,tagname,{script,style,markup,props}){if(customElements.get(tagname))return;let scopedSheet=new CSSStyleSheet;scopedSheet.replaceSync(style??"");let sheets=[scopedSheet],setup=new Function("$data","$el","$props","$cleanup","$state","$effect",script);customElements.define(tagname,class extends HTMLElement{static get observedAttributes(){return props}props=alpine.reactive({});attributeChangedCallback(name,oldValue,newValue){oldValue!==newValue&&(this.props[name]=newValue)}connectedCallback(){this.attachShadow({mode:"open"}),this.shadowRoot.adoptedStyleSheets=sheets;let dataName="blackberrycomp"+tagname.replace("-","");if(!alpineDataRegisterMap.has(dataName)){alpineDataRegisterMap.add(dataName);let self=this;alpine.data(dataName,()=>{let $cleanup=__name((...fns)=>void this.cleanupFns.push(...fns),"$cleanup"),$effect=__name(fn=>void this.effects.push(alpine.effect(fn)),"$effect");return{init(){let data={};setup.call(self,data,self,self.props,$cleanup,alpine.reactive,$effect),Object.assign(this,data),Object.assign(this,self.props)}}})}let el=document.createElement("x-provider");if(el.setAttribute("x-data",dataName),typeof markup=="string")el.innerHTML=markup;else for(let x of markup.children)el.appendChild(x.cloneNode(!0));this.shadowRoot.appendChild(el),alpine.initTree(this.shadowRoot)}cleanupFns=[];effects=[];disconnectedCallback(){this.cleanupFns.forEach(fn=>fn()),this.effects.forEach(fn=>alpine.release(fn))}})}__name(define,"define");function defineComponent({tag,script,style,markup,props}){if(!window.Alpine)throw new Error("window.Alpine is not defined");define(window.Alpine,tag,{script,style,markup,props})}__name(defineComponent,"defineComponent");var alpineDataRegisterMap=new Set;export{init as default,defineComponent};
